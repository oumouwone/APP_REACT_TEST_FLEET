{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/oumouwone/MovieApp2/src/components/Movies.js\";\nimport React from 'react';\nimport { NavLink } from 'react-router-dom'; // List des films oscars\n\nclass Movies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.themoviedb.org/3/list/1?api_key=4582f3be0f54a89cfa71d5857d523edb&language=fr-FR\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    const filterMovies = items.filter(data => data.title.toLowerCase().includes(this.props.data_filtered.toLowerCase()));\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Erreur : \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Chargement\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: filterMovies.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item\",\n            children: [item.title, /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(NavLink, {\n                type: \"button\",\n                className: \"btn btn-outline-success badge\",\n                to: {\n                  pathname: `/movie/${item.id}`,\n                  state: 'flushDeal'\n                },\n                children: \"Voir plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n} // List des films oscars\n// function Movies() {\n//     return (\n//         <div className=\"movies\">\n//             <ul className=\"list-group\">\n//                 {/* <li className=\"list-group-item\">\n//                     Film 1\n//                 <div>\n//                         <a type=\"button\" className=\"btn btn-outline-success badge\" href=\"#\">Voir plus</a>\n//                     </div>\n//                 </li> */}\n//             {filterMovies.map(item => (\n//               <li className=\"list-group-item\">\n//               {item.title}\n//                 <div>\n//                     <NavLink type=\"button\" className=\"btn btn-outline-success badge\"to={{ pathname: `/movie/${item.id}`, state: 'flushDeal' }}>Voir plus</NavLink>\n//                 </div>\n//               </li>\n//             ))}\n//             </ul>\n//         </div>\n//     )\n// }\n\n\nexport default Movies;","map":{"version":3,"sources":["/Users/oumouwone/MovieApp2/src/components/Movies.js"],"names":["React","NavLink","Movies","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","filterMovies","filter","data","title","toLowerCase","includes","data_filtered","message","map","item","pathname","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CAEA;;AACA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6FAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,KAAK,EAAEM,MAAM,CAACN;AAFF,OAAd;AAID,KARL,EASKF,KAAD,IAAW;AACT,WAAKS,QAAL,CAAc;AACZR,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAdL;AAgBD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA6B,KAAKH,KAAxC;AAEA,UAAMY,YAAY,GAAGT,KAAK,CAACU,MAAN,CAAaC,IAAI,IACpCA,IAAI,CAACC,KAAL,CAAWC,WAAX,GAAyBC,QAAzB,CAAkC,KAAKlB,KAAL,CAAWmB,aAAX,CAAyBF,WAAzB,EAAlC,CADmB,CAArB;;AAIA,QAAIf,KAAJ,EAAW;AACT,0BAAO;AAAA,gCAAeA,KAAK,CAACkB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACjB,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BAEA;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAECU,YAAY,CAACQ,GAAb,CAAiBC,IAAI,iBACpB;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,uBACCA,IAAI,CAACN,KADN,eAEE;AAAA,qCACI,QAAC,OAAD;AAAS,gBAAA,IAAI,EAAC,QAAd;AAAuB,gBAAA,SAAS,EAAC,+BAAjC;AAAgE,gBAAA,EAAE,EAAE;AAAEO,kBAAAA,QAAQ,EAAG,UAASD,IAAI,CAACE,EAAG,EAA9B;AAAiCvB,kBAAAA,KAAK,EAAE;AAAxC,iBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD;AAFD;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,cADJ;AAgBD;AACF;;AA1DgC,C,CA4DnC;AAEF;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,MAAf","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom';\n\n// List des films oscars\nclass Movies extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: []\n      };\n    }\n  \n    componentDidMount() {\n      fetch(\"https://api.themoviedb.org/3/list/1?api_key=4582f3be0f54a89cfa71d5857d523edb&language=fr-FR\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              items: result.items\n            });\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }   \n  \n    render() {\n      const { error, isLoaded, items } = this.state;\n  \n      const filterMovies = items.filter(data => (\n        data.title.toLowerCase().includes(this.props.data_filtered.toLowerCase())\n      ))\n  \n      if (error) {\n        return <div>Erreur : {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Chargementâ€¦</div>;\n      } else {\n        return (\n            <div className=\"movies\">\n\n            <ul className=\"list-group\">\n\n            {filterMovies.map(item => (\n              <li className=\"list-group-item\">\n              {item.title}\n                <div>\n                    <NavLink type=\"button\" className=\"btn btn-outline-success badge\"to={{ pathname: `/movie/${item.id}`, state: 'flushDeal' }}>Voir plus</NavLink>\n                </div>\n              </li>\n            ))}\n            </ul>\n        </div>\n        );\n      }\n    }\n  }\n  // List des films oscars\n\n// function Movies() {\n//     return (\n//         <div className=\"movies\">\n\n//             <ul className=\"list-group\">\n//                 {/* <li className=\"list-group-item\">\n//                     Film 1\n//                 <div>\n//                         <a type=\"button\" className=\"btn btn-outline-success badge\" href=\"#\">Voir plus</a>\n//                     </div>\n//                 </li> */}\n\n//             {filterMovies.map(item => (\n//               <li className=\"list-group-item\">\n//               {item.title}\n//                 <div>\n//                     <NavLink type=\"button\" className=\"btn btn-outline-success badge\"to={{ pathname: `/movie/${item.id}`, state: 'flushDeal' }}>Voir plus</NavLink>\n//                 </div>\n//               </li>\n//             ))}\n//             </ul>\n//         </div>\n//     )\n// }\n\nexport default Movies\n"]},"metadata":{},"sourceType":"module"}